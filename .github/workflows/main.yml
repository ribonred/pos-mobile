name: Build APK

on:
  # auto run on push/merge on master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.NEW_VERSION }}
    steps:
    - uses: actions/checkout@v3
    - name: "Retrieve version"
      id: version
      run: |
        echo "OLD_VERSION=$(cat ${GITHUB_WORKSPACE}/pubspec.yaml | grep 'version:' | head -1 | cut -f2- -d: | sed -e 's/^[ \t]*//')" >> $GITHUB_OUTPUT
        echo "NEW_VERSION=$(awk '{ match($0,/([0-9]+)\+([0-9]+)/,a); a[1]=a[1]+1; a[2]=a[2]+1; sub(/[0-9]+\+[0-9]+/,a[1]"+"a[2])}1' ${GITHUB_WORKSPACE}/pubspec.yaml | grep 'version:' | head -1 | cut -f2- -d: | sed -e 's/^[ \t]*//')" >> $GITHUB_OUTPUT
    - name: "Increment version"
      run: |
        sed -i 's/${{ steps.version.outputs.OLD_VERSION }}/${{ steps.version.outputs.NEW_VERSION }}/g' ${GITHUB_WORKSPACE}/pubspec.yaml
        echo ${{ steps.version.outputs.OLD_VERSION }}
        echo ${{ steps.version.outputs.NEW_VERSION }}
    - name: Make envfile
      run: |
        echo "POS_API_URL=https://pc.soberdev.net/" >> .env
    - uses: actions/setup-java@v3
      with:
        distribution: "zulu"
        java-version: "12.x"
        cache: "gradle"
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.13.9"
        channel: "stable"
        cache: true
    - name: Get dependencies
      run: flutter pub get
    - name: Build APK
      run: flutter build apk --split-per-abi --obfuscate --split-debug-info --release
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        version: ${{ needs.build.outputs.new_version }}
      run: |
        echo "version: -> $version"
        gh release create "$version" \
            --repo="$GITHUB_REPOSITORY" \
            --title="${GITHUB_REPOSITORY#*/} ${version#v}" \
            --generate-notes
    - name: Upload Apk assets
      uses: AButler/upload-release-assets@v3.0
      with:
        files: "${GITHUB_WORKSPACE}/build/app/outputs/apk/release/*.apk"
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{ needs.build.outputs.new_version }}
