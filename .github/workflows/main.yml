name: Build APK

on:
  # auto run on push/merge on master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_POS_API_URL: "https://pc.soberdev.net/"
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"
          cache: "gradle"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.9"
          channel: "stable"
          cache: true
      - name: Get dependencies
        run: flutter pub get
      - name: Build APK
        run: flutter build apk --split-per-abi --obfuscate --split-debug-info --release
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.head_commit.message }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${tag#v}" \
              --generate-notes
      - name: List files
        run: |
          ls -lah
      - name: Upload release assets
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const path = require('path');
            const fs = require('fs');
            const release_id = '${{ needs.create_release.outputs.id }}';
            for (let file of await fs.readdirSync('./build/app/outputs/apk/release')) {
              if (path.extname(file) === '.apk') {
                console.log('uploadReleaseAsset', file);
                await github.repos.uploadReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: release_id,
                  name: file,
                  data: await fs.readFileSync(`./${file}`)
                });
              }
            }
